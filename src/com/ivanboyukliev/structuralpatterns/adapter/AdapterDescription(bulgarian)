                                                                                   I. Adapter


1.Онсновна идея

-> Адаптер шаблонът за дизайн работи като свързващо звено между два директно несъвместими интерфейса. Шаблонът е извстен също под името "wrapper".

2.Примери от сферата на софтуера

-> Имаме съществуваща софтуерна система. Трябва да се добавя външна библиотека, която е с една версия по-нова от старата, която сме използвали и дизайнът е по-различен. Не искаме
   да рзрешаваме възникналите несъвместимости чре промяна на съществуващия наш код, нито пък можем да променим кода на библиотеката. В така ситуация може да се използва Adapter
   шаблонът, като той ще бъде в ролята на посредник и ще преобразува постъпващите заявки от клиента и ще ги преобразува в такива, които обслужа външната библиотека.

Примери за приложен Adapter шаблон в JDK : java.util.Arrays#asList() ; java.io.InputStreamReader (InputStream) (returns Reader)

3. Изграждащи компоненти

 1) Taget Interface : дефинира domain-specific интерфейс, който ще използва Client
 2) Client  : сътрудничи си обекти, които са от Target интерфейса
 3) Adaptee : Дефинира съществуващ интерфейс, който ще бъде адаптиран
 4) Adapter : Адаптира интерфейса на Adaptee към Target интерфейса

4. Използване на клиента

-> Client прави заявка към Adapter чрез извикването на метод върху него, който принадлежи към Target интерфейса
-> Аdapter 'превежда' подадените му заявки като изивква методи принадлежащи на Аdaptee интерфейса и изпълняващи се от Аdaptee обекта

5. Обобщение

-> Adapter-ите варират във това колко работа ще изпълнят така че да пригодят Adaptee обекта към Target интерфейса.