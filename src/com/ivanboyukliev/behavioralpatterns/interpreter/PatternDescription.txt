
                                                                               III. Interpreter

1. Оснвона идея

-> Шаблонът предоставя механизъм за оценяване дали граматиката на даден език е спазена

-> Формалната дефиниция е: Иамйки език, дефинирай представяне на неговата граматика заедно с интерпретатор, който използва това представяне, за да интерпретира изречнията в езика. В общи линии създаваме граматиката на даден
                           език и предоставяме интерпретатор, който да работи с тази граматика

-> Включва създаването на expression интерфейс, който казва как да интерпретираме даден контекст.

-> Граматика всъщност означава начин за представяне на валидни изречения в езика. Дефинира език чрез използването на символи и синтаксис. Дефинира се с посочването на правила. Всяко правило покзва как един символ (нетерминален)
   може да бъде заменен с група от символи (терминални) -> препратка към дисциплината езикови процесори

-> Граматика в контекста на дисциплината Езикови прозесори е съставена от : множество променливи и нетерминални символи, множество терминални символи, S - символ за начало и P - продукция : правила за заменяне на нетерминални с
   терминални символи

-> Когато искаме да имплементираме прост език е добре да използваме Interpreter шаблона. Всеки един клас представлява едно правило в езика

2. Примери

-> java.util.Pattern и подкласовете на java.text.Fromat

3. Кога да използваме шаблона - когато езикът е прост (няма много правила)

4. Компоненти от имплементацията

   1) AbstractExpression : декларира абстрактна интерпретираща операция, която е обща за всички възли в абстрактното синтактично дърво

   2) TerminalExpression extends AbstractExpression: имплементира операции свързани с терминалните символи от граматиката. Инстанция от този клас се изисква за всеки терминален символ в едно изречение.

   3) NonterminalExpression : един такъв клас е небоходим за всяко правило в граматиката. Имплементира операциите съврзани с нетерминалните символи в граматиката

   4) Context - създържа информацията, която е глобална за интерпретатора

   5) Client - изгражда абстрактното синтактично дърво представящо определено изречение в езика, който е дефиниран от граматиката. Абстрактното синтактично дърво е създадено от инстанции на NonTerminalExpression и TerminalExpression
               класовете. Клиентът е отговорен за извикването на интерпретиращата опеарация.

5. Обобщение на ролите на компонентите от шаблона

-> Клиентът построява (или получава) изречение под фромата на абстрактно синтактично дърво от NonTerminalExpression и TerminalExpression инстанции.

-> След това клиентът инициализира контекста и извква интерпретиращата операция.

-> Всеки NonterminalExpresson възел дефинира Interpret in terms of Interpret on each subexpression ???

-> Интерпретиращата операция на всеки TerminalExpression обект дефинира базовия случай в рекурсията ???

-> Интерпретиращите операции на всеки възел използват Context обекта, за да съхраняват и достъпватсъстоянието на interpreter
