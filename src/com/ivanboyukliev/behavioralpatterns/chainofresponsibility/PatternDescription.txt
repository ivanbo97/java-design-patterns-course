                                                                  I. Chain of Responsibility Design Pattern


1. Основна идея - Чрез шаблона се избягва тясното обвързване между обекта изпращащ запитване и този, който го получава, защото различни обекти (а не конкретно един) могат да обсулжат дадена заявка.

-> Изпратената заявка преминава неявно през верига (списък) от кандидати да я обслужат. Когато даден кандидат е приключил с обработката, но има все още работа за изпълнение, заявката се предава към следващия обект
   по веригата. Всеки обект от веригата съдържа реферeнция към следващия. Можем да доавяме обекти във веригата по всяко време (аt runtime).

2. Кога да използваме шаблона ?

-> Когато множество обекти, определени at runtime, са кандидати за обслужаване на дадено събитие.

-> Когато не искаме явно да зададем конкретен изпълнител на дадена задача.

3. Предимства на шаблона

-> Обектът, който изпраща заявка и този, койото я получава не знаят един за друг - по този начин се постига абстракция и слабо обвързване.

4. Недостатъци

-> Изпълнението на дадена заявка не е гранатирано.
-> Трудно се debug-ва.

5. Компоненти при имплементация на шаблона

   1) Handler - представлява интерфейс с метод за обслужване на заявки и изграждане на връзка със следващия елемент от веригата (не е задължителен) ;

   2) ConcreteHandler - обслужва заявките, за които отговаря ; може да достъпва следващи handler във веригата ; Ако ConcreteHandler обекта може да обслужи заявка го прави, ако не, го предава на следващия във веригата.

   3) Client - инициира заявката като използва CocnreteHandler обект.

6. Важни аспекти на имплементацията

-> Клиентът не знае кой обект от веригата ще изпълни заявката. Просто я изпраща към първия във веригата.

-> Всеки обект от веригата ще има своя собствена имплементация за обработка на заявката - частична/цялостна обработка или предаване на следващия във веригата.

-> Всеки обект във веригата съдържа рефернция към следващия, на който ще изпрати заяваката. Постига се с композиция.

-> Създавнето на веригата е ключово. Може да има ситуации, в които заяваката няма да бъде изпращана към нито един обработчик или просто няма обработчици, които да могат да обслужат заявката. Трябва да се добави проверка, за да
   сме сигурни, че заявката е напълно обработена.

