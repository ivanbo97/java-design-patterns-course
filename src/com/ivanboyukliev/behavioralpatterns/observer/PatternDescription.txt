                                                                                            VII. Observer

1. Основна идея : Observer шаблонът дефинира one-to-many зависимост между обектите, така че когато един обект промени състоянието си, всички зависещи от него са известени за това

-> Много обекти трябва да бъдат известени, когато се появи събитие и трябва да бъдат известени автоматично. Обаче не искаме да променяме обекта, който излъчва промените всеки път когато има промяна в групата обекти, слушащи
   за промяната. Затова търсим разделяне (decoupling) между изпращащите нотифицакиите и тези, които ги получават.

-> При този шаблон има множество наблюдатели (observers), които наблюдават състоянието на даден обект. Наблюдателите се регистрират, за да наблюдават даден обект и автоматично получават известия за промени. Когато преценят, че нямат
   нужда от такава информация премахват своята регистрация

-> Предоставя се по-малко свързан дизайн между обектите, които взаимодействат.

2. Компоненти участващи в имплементацията на шаблона

  1) Subject : Предоставя интерфейс за регистриране / премахване и известяване на observer обекти при наличие на промени. Съдържа списък с наблюдаващи неговото състоение (observers). Няма ограничение в броя на наблюдателите.

  2) Observer : Дефинира интерфейс, по който ще се известяват обектите, които са заинтересовани от промените в състоянията на Subject. Всички потенциални наблюдатели трябва да имплементират този интерфейс.

  3) ConcreteSubject : съхранява данните, които са от интерес за ConcreteObserver обектите. Изпраща известие до наблюдателите, когато състоянието се промени

  4) ConcreteObserver: съдържа референция към ConcreteSubject. Имплементира Observer интерфейса.