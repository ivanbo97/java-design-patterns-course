
                                                                                      VI. Memento

1. Основна идея

-> Целта на този шаблон е да се запази състоянието на даден обект, така че в бъдеще да може да се върне към това състояние без да се нарушава капсулирането.

-> Имплементира се по такъв начин, че запазените данни на обекта не са достъпни извън самия обект.

-> Използва се, когато трябва да поддържаме "undo" заявки.

2. Недостатък : запазване и последващото възстановяване на състоянието на обект може да костава доста време.

3. Компоненти при имплементацията

  1) Memento : съхранява вътрешното състояние на Originator обекта. В зависимост от небходимостта съхранява различна част от капсулираните в Originator данни. Данните в memento могат да се достъпват само от
               Originator обекта (Memento класът е вътрешен за Originator). Има два интерфейса: Caretaker (може да предава memеnto към други обекти) и Originator (дава се достъп до всички данни, за да се възстанови
               предходното състояние)

  2) Originator : създава Memento обект, създържащ "снимка"(snapshot) на моментното му съдържане. Използва Memento обект, за да възстанови предишното си вътрешно състояние

  3) Caretaker: отговорен за съхранението на Memento; никога не оперира с Memento обекта и не достъпва неговото съдържание



4. Повече детайли за Originator и Caretaker

-> Originator е обектът, чието състояние трябва да бъде съхранено и възстановене.

-> Caretaker е помощен клас, който е отговорен за съхраняване и възстановяване на състоянието на Originator чрез Memento обекта. Може да следи няколко Memento обекти. Memento се съхранява като Object в Caretaker.

-> Caretaker дава заявка за memento ("снимка" на текущото състояние) от Originator обекта и го връща обратно към Originator

-> Понякога Caretaker обекта не предава memento обратно към Originator обекта. Mоже никога да не се наложи на Originator обекта да се върне към по-ранното си състояние.

-> Memento обектите са пасивни. Само Originator обекта, който е създал memento ще присвои и извлича неговот състояние.


5. Механизъм на взаимодействие

-> Caretaker обектът решава, че ще иска да извършва действие с Originator обекта, но преди това иска да запази текущото му състояние, така че да може при небоходимост да се върне пак към него.

-> Caretaker обектът извиква createMemento() метода през Originator обекта искайки от него да му върне memento обект. Оriginator обекта съдава Memento обект и запазва в него текущото му вътрешно състояние.
   След това Originator връща на Caretaker memento обекта.

-> Caretaker запазва моментната "снимка" (memento на Originator обекта), извършва други операции с Originator обекта и при небходимост извиква setMemento() с подаден параметър memento състоянието, към което
   искаме да върнем Originator обекта.

