                                                                       II. Abstract Factory Method

1. Основна идея:

-> Чрез този шаблон се предоставя интерфейс за създаването на семейства от зависими обекти без да се дават техните конкретни класове (Явява се като : "factory of factories" или
   super factory, което създава други factor-ита)

-> Шаблон, който създава обекти чрез абстракция (без да се интересува от това как се създават продуктите)

-> Методите на Abstract Factory се имплементират като Factory methods шаблона. По този начин се предоставя механизъм за капсулация на група от Factories. Factory Method шаблонът
   се явява подмножество на Abstract Factory.

-> Обикновено има един concrete class имплементиран за всяко семейство

2. Кога се налага използването на този шаблон ?

-> Когато в системата има множество Factories

-> Когато домейнът има различни семейства от обекти и всеки от тях се използва при различни условия

-> При Abstract Factory отговорността за инстанцирането се делегира на друг обект чрез използването на композиция ("has a" връзка)

-> !!! Factory Method шаблонът се използва, когато имаме само един продуктов интерфейс, а когато имаме повече от един използваме Abstract Factory

3. Предимства и недостатъци

-> Прави обменът на продуктови семейства по-лесен : класът на конкретното factory се появява само веднъж в приложението (където е инстанциран). По този начин по-лесно, ако се наложи,
   се променя конкретното Factory, което използва приложението.

-> Недостатък : При добавянето на нов продукт трябва да наследим итерфейса и като резултат ще се наложат промени във всички подкласове, които вече имплементират интерфейса